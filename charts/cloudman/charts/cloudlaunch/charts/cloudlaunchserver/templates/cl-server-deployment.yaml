---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "cloudlaunchserver.fullname" . }}
  labels:
    app: {{ template "cloudlaunchserver.name" . }}
    chart: {{ template "cloudlaunchserver.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: django
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "cloudlaunchserver.name" . }}
      release: {{ .Release.Name }}
      component: django
  template:
    metadata:
      labels:
        app: {{ template "cloudlaunchserver.name" . }}
        release: {{ .Release.Name }}
        component: django
      annotations:
        {{- with .Values.podAnnotations -}}
        {{ toYaml . | nindent 8 }}
        {{ end }}
    spec:
      securityContext:
        fsGroup: 2000
      initContainers:
        - name: {{ .Values.container_name | default .Chart.Name }}-init
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/bin/bash", "-c", "/bin/run-parts --exit-on-error --verbose --regex '.*.sh$' /app/scripts"]
          workingDir: "{{ .Values.django_dir }}"
          env:
            - name: DJANGO_ADMIN_PASSWORD
              value: {{ .Values.admin_password | quote }}
{{- /*
  Trick to globally disable certificate verification as OIDC will fail due to unverified certificate
  https://stackoverflow.com/questions/48391750/disable-python-requests-ssl-validation-for-an-imported-module?rq=1
*/}}
            - name: CURL_CA_BUNDLE
              value: ""
          {{- include "cloudlaunchserver.envvars" . }}
{{- range $key, $val := .Values.extra_env }}
{{- if $val }}
            - name: {{ $key | upper }}
              value: "{{ tpl $val $ }}"
{{- end }}
{{- end }}
          volumeMounts:
            - name: initial-data
              mountPath: /app/initial_data
              readOnly: true
            - name: scripts
              mountPath: /app/scripts
              readOnly: true
          {{- range .Values.extra_config_mounts }}
            - name: {{ .name }}
              mountPath: {{ .mount_path }}
              readOnly: {{ .read_only }}
          {{- end }}
          {{- range .Values.extra_secret_mounts }}
            - name: {{ .name }}
              mountPath: {{ .mount_path }}
              readOnly: {{ .read_only }}
          {{- end }}
{{- with .Values.extraVolumeMounts }}
{{ tpl . $ | indent 12 }}
{{- end }}
        {{- if .Values.extraInitContainers -}}
        {{- range $each := .Values.extraInitContainers -}}
        {{- print "- " | nindent 8 -}}
        {{- tpl ($each | toYaml | indent 10 | trim) $ -}}
        {{- end }}
        {{- end }}
      volumes:
        - name: initial-data
          configMap:
            name: {{ template "cloudlaunchserver.fullname" . }}-initial-data
            defaultMode: 0777
        - name: scripts
          configMap:
            name: {{ template "cloudlaunchserver.fullname" . }}-init-scripts
            defaultMode: 0777
        {{- range .Values.extra_config_mounts }}
        - name: {{ .name }}
          configMap:
            name: {{ tpl .config_name $ }}
            defaultMode: 0777
        {{- end }}
        {{- range .Values.extra_secret_mounts }}
        - name: {{ .name }}
          secret:
            secretName: {{ tpl .secret_name $ }}
            defaultMode: 0777
        {{- end }}
{{- with .Values.extraVolumes }}
{{ tpl . $ | indent 8 }}
{{- end }}
      containers:
        - name: {{ .Values.container_name | default .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: http
          readinessProbe:
            tcpSocket:
              port: http
          volumeMounts:
            - name: initial-data
              mountPath: /app/initial_data
              readOnly: true
            - name: scripts
              mountPath: /app/scripts
              readOnly: true
          {{- range .Values.extra_config_mounts }}
            - name: {{ .name }}
              mountPath: {{ .mount_path }}
              readOnly: {{ .read_only }}
          {{- end }}
          {{- range .Values.extra_secret_mounts }}
            - name: {{ .name }}
              mountPath: {{ .mount_path }}
              readOnly: {{ .read_only }}
          {{- end }}
{{- with .Values.extraVolumeMounts }}
{{ tpl . $ | indent 12 }}
{{- end }}
          env:
            - name: HELMSMAN_AUTO_DEPLOY
              value: "true"
          {{- include "cloudlaunchserver.envvars" . }}
{{- range $key, $val := .Values.extra_env }}
{{- if $val }}
            - name: {{ $key | upper }}
              value: "{{ tpl $val $ }}"
{{- end }}
{{- end }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
