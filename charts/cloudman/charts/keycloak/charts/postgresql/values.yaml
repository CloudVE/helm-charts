extraEnv: {}
global:
  postgresql: {}
image:
  debug: false
  pullPolicy: IfNotPresent
  registry: docker.io
  repository: bitnami/postgresql
  tag: 11.5.0-debian-9-r60
livenessProbe:
  enabled: true
  failureThreshold: 6
  initialDelaySeconds: 30
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 5
master:
  affinity: {}
  extraVolumeMounts: []
  extraVolumes: []
  nodeSelector: {}
  podAnnotations: {}
  podLabels: {}
  tolerations: []
metrics:
  enabled: false
  image:
    pullPolicy: IfNotPresent
    registry: docker.io
    repository: bitnami/postgres-exporter
    tag: 0.5.1-debian-9-r73
  livenessProbe:
    enabled: true
    failureThreshold: 6
    initialDelaySeconds: 5
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  readinessProbe:
    enabled: true
    failureThreshold: 6
    initialDelaySeconds: 5
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  securityContext:
    enabled: false
    runAsUser: 1001
  service:
    annotations:
      prometheus.io/port: "9187"
      prometheus.io/scrape: "true"
    loadBalancerIP: null
    type: ClusterIP
  serviceMonitor:
    additionalLabels: {}
    enabled: false
networkPolicy:
  allowExternal: true
  enabled: false
persistence:
  accessModes:
  - ReadWriteOnce
  annotations: {}
  enabled: true
  mountPath: /bitnami/postgresql
  size: 8Gi
  subPath: ""
postgresqlDataDir: /bitnami/postgresql/data
postgresqlUsername: postgres
readinessProbe:
  enabled: true
  failureThreshold: 6
  initialDelaySeconds: 5
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 5
replication:
  applicationName: my_application
  enabled: false
  numSynchronousReplicas: 0
  password: repl_password
  slaveReplicas: 1
  synchronousCommit: "off"
  user: repl_user
resources:
  requests:
    cpu: 250m
    memory: 256Mi
securityContext:
  enabled: true
  fsGroup: 1001
  runAsUser: 1001
service:
  annotations: {}
  port: 5432
  type: ClusterIP
serviceAccount:
  enabled: false
slave:
  affinity: {}
  extraVolumeMounts: []
  extraVolumes: []
  nodeSelector: {}
  podAnnotations: {}
  podLabels: {}
  tolerations: []
updateStrategy:
  type: RollingUpdate
volumePermissions:
  enabled: true
  image:
    pullPolicy: Always
    registry: docker.io
    repository: bitnami/minideb
    tag: stretch
  securityContext:
    runAsUser: 0
